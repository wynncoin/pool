{
  "name": "http-sync",
  "version": "0.1.2",
  "description": "A synchronous HTTP Client library for node.js",
  "main": "http-sync.js",
  "scripts": {
    "test": "node test/index.js",
    "install": "node-gyp rebuild"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dhruvbird/http-sync.git"
  },
  "author": {
    "name": "Dhruv Matani"
  },
  "contributors": [
    {
      "name": "Sean Massa",
      "email": "endangeredmassa@gmail.com",
      "url": "http://massalabs.com/"
    },
    {
      "name": "Taro Kobayashi",
      "email": "9re.3000@gmail.com",
      "url": "http://tech.kayac.com/"
    },
    {
      "name": "Charles Bourasseau",
      "url": "https://github.com/cbou"
    },
    {
      "name": "Bryan Rockwood",
      "url": "https://github.com/brockwood"
    },
    {
      "name": "Jan Krems",
      "url": "https://github.com/jkrems"
    },
    {
      "name": "Boris Serdyuk",
      "url": "https://github.com/just-boris"
    },
    {
      "name": "Chad Hatcher",
      "url": "https://github.com/chatcher"
    }
  ],
  "license": "BSD",
  "gypfile": true,
  "readmeFilename": "README.md",
  "dependencies": {
    "nan": "~1.8.0",
    "caseless": "~0.9.0"
  },
  "readme": "# http-sync\n\nhttp-sync is a compiled Node.js extension that provides syncronous http calls.\n\n# Installing\n\nYou must have libcurl installed in order to compile this extension.\n\nOn Ubuntu, you can run: `sudo apt-get install libcurl4-openssl-dev`\nOn CentOS, you can run: `sudo yum install libcurl libcurl-devel`\n\n# Using\n\n```javascript\n// example with default options\nhttpSync = require('http-sync');\n\nvar request = httpSync.request({\n    method: 'GET',\n    headers: {},\n    body: '',\n\n    protocol: 'http',\n    host: '127.0.0.1',\n    port: 80, //443 if protocol = https\n    path: '/'\n});\n\nvar timedout = false;\nreq.setTimeout(10, function() {\n    console.log(\"Request Timedout!\");\n    timedout = true;\n});\nvar response = request.end();\n\nif (!timedout) {\n    console.log(response);\n    console.log(response.body.toString());\n}\n```\n\n# SSL/TLS Options\n\nIf you require the use of a private CA or client certificate authentication, the following options are available:\n\n* pfx - Path to certificate, private key and CA certificates to use\n* ca - Path to an authority certificate\n* cert - Path to the public x509 client certificate to use\n* key - Path to the private key used for SSL\n* passphrase - A string of passphrase for the private key or pfx, if required\n\n```javascript\n// example with a private CA and client cert authentication\nhttpSync = require('http-sync');\n\nvar request = httpSync.request({\n    method: 'GET',\n    headers: {},\n    body: '',\n\n    protocol: 'https',\n    host: '127.0.0.1',\n    port: 443, // protocol = https\n    path: '/',\n    ca: '/path/to/CA',\n    cert: '/path/to/crt',\n    key: '/path/to/key',\n    rejectUnauthorized: true\n});\n\nvar timedout = false;\nreq.setTimeout(10, function() {\n    console.log(\"Request Timedout!\");\n    timedout = true;\n});\nvar response = request.end();\n\nif (!timedout) {\n    console.log(response);\n    console.log(response.body.toString());\n}\n```\n\n# Contributing\n\n## node >= v0.8.0\n\n`node-gyp configure && node-gyp build`\n\n## node < v0.8.0\n\nYou will need:\n\n* node.js source code\n* v8 source code\n* libcurl development package\n\nBuilding:\n\n    node-waf configure && node-waf build\n\n## testing\n\nRun the test.js file:\n\n    node test.js\n",
  "bugs": {
    "url": "https://github.com/dhruvbird/http-sync/issues"
  },
  "homepage": "https://github.com/dhruvbird/http-sync",
  "_id": "http-sync@0.1.2",
  "dist": {
    "shasum": "eedab09730c10074c429905358ff8f78e3f8231d"
  },
  "_from": "http-sync@",
  "_resolved": "https://registry.npmjs.org/http-sync/-/http-sync-0.1.2.tgz"
}
